set -g mouse on

set -g base-index 1
set -g pane-base-index 1

setw -g mode-keys vi

bind -n "M-v" copy-mode -e
set -wg mode-style bg=cyan,fg=black


bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi h send -X cursor-down
# bind -T copy-mode-vi t send -X cursor-up
bind -T copy-mode-vi d send -X halfpage-down
bind -T copy-mode-vi u send -X halfpage-up

# bind -T copy-mode-vi j send -X cursor-left
# bind -T copy-mode-vi l send -X cursor-right

bind -T copy-mode-vi 'C-v' send -X rectangle-toggle


# bind -T copy-mode-vi n send -X cursor-right

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

set-option -g focus-events on

set -g history-limit 1000000

set-option -gw xterm-keys on

set -g default-terminal 'xterm-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
# set-option -g default-terminal "screen-256color"


set-option -g status-position bottom
set-option -g status-style bg=default
# set -g status off

# set -g pane-active-border fg=white

set -g prefix C-b

# reload
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
# set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
# set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'


# if first window than hide status bar
bind -n "M-;" "select-window -t 1"
bind -n "M-," "select-window -t 2"
bind -n "M-." "select-window -t 3"
bind -n "M-p" "select-window -t 4"
bind -n "M-y" "select-window -t 5"

 # bind -n "M-p" "previous-window"
 # bind -n "M-n" "next-window"

# bind -n "M-." "set -g status on && select-window -t 3"
# bind -n "M-p" "set -g status on && select-window -t 4"

# bind -n "M-g" new-window -c "#{pane_current_path}" "gh dash"
# bind -n "M-m" new-window -c "#{pane_current_path}" "ld"
# bind -n "M-g" new-window -c "#{pane_current_path}" "g"

bind -n "M-right" resize-pane -R
bind -n "M-down" resize-pane -D 
bind -n "M-up" resize-pane -U 
bind -n "M-left" resize-pane -L 

bind  -n "M-c"  if '[ "#{session_windows}" -lt 5 ]' \
            'new-window -c "#{pane_current_path}"' 'display "!! too many windows" '

bind -n "M-w"  if '[ "$(tmux list-panes | wc -l)" -gt 1 ] || [ "$(tmux list-windows | wc -l)" -gt 1 ]' \
            'kill-pane' 'display "!! cant close last pane" '

bind-key T run-shell "/home/kkpagaev/.tmux/plugins/t-smart-tmux-session-manager/bin/t"

bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

bind -n "M-h" select-pane -L
bind -n "M-n" select-pane -R
bind -n "M-t" select-pane -D

bind -n "M--" split-window -v -c "#{pane_current_path}"

bind -n 'M-\' split-window -h -c "#{pane_current_path}"
bind -n 'M-s' split-window -h -c "#{pane_current_path}"

bind -n 'M-u' resize-pane -Z

# bind -n 'M-n' switch-client -n
# bind -n 'M-r' switch-client -p
bind -n 'M-l' run-shell "t"

# bind -n 'M-n' next-window

# bind -n 'M-c' new-window -c "#{pane_current_path}"

# bind -n 'M-r' rotate-window

# bind -n 'M-s' choose-tree -Zs

# set -g status-left "#[fg=white,bg=#252535,bold] #S#[fg=#252535,bg=default,nobold,noitalics,nounderscore]ÓÇ¥"

set -g window-status-current-format "üåï"
#
set -g window-status-format "üåë"
#

# set -g status-right "#[fg=#24283B]ÓÇ∂#[fg=white,bg=#24283B] %Y-%m-%d #[]%H:%M "
# set -g window-status-separator ""


# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
# set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
# .tmux.conf
# set -g status off

# set -ga terminal-overrides "screen*:Ms=\\E]52;%p1%s;%p2%s\\007,tmux*:Ms=\\E]52;%p1%s;%p2%s\\007"

# set -g pane-border-style "fg=#1F1F28 bg=default"
# set -g pane-border-style "fg=#000000 bg=default"
set -g pane-border-style "fg=#1f1f23 bg=default"
set -g pane-active-border-style "bg=default fg=#252535"

set -sg escape-time 0

bind -T copy-mode-vi y send -X copy-selection

set -g focus-events on
set -g status-style bg=default
# set -g status-left '#[fg=white,bg=#252535,bold] #S #[fg=#252535,bg=default,nobold,noitalics,nounderscore] #(gitmux "#{pane_current_path}") #(cat #{socket_path}-\#{session_id}-vimbridge)'
# set -g status-left '#[fg=#ffa066] Ôêì  #(echo #{pane_current_path} | sed "s#$HOME#~#g" | sed "s/gitlab/g/") '
# set -g status-left-length 90
# set -g status-right '#(gitmux -cfg $HOME/.gitmux.conf "#{pane_current_path}") #[fg=#24283B]#[fg=white,bg=#24283B] #S '
# set -g status-right-length 90
# set -g status-justify absolute-centre
# set -g status-bg "#16161d"

set -g status-left '#[fg=#957fb8] '
set -g status-left-length 90
set -g status-right '#(gitmux -cfg $HOME/.gitmux.conf "#{pane_current_path}") #[fg=#24283B]#[fg=white,bg=#24283B] #S '
set -g status-right-length 90


set -g status-left ' '
set -g status-left-length 90
set -g status-right '#(gitmux -cfg $HOME/.gitmux.conf "#{pane_current_path}") #[fg=black,bg=green] #S '
set -g status-right-length 90

# set -g status-justify absolute-centre
# set -g status-bg black

run '~/.tmux/plugins/tpm/tpm'

